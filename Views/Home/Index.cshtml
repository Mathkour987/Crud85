<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>User Management - Privacy</title>
    <style>
        body {
            font-family: 'Segoe UI', sans-serif;
            background: #f2f5f9;
            margin: 0;
            padding: 0;
        }

        .container {
            max-width: 800px;
            margin: 50px auto;
            background: #fff;
            padding: 30px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            border-radius: 12px;
        }

        h2 {
            text-align: center;
            color: #333;
            margin-bottom: 20px;
        }

        .input-group {
            display: flex;
            gap: 10px;
            margin-bottom: 20px;
        }

            .input-group input {
                flex: 1;
                padding: 10px;
                font-size: 16px;
                border: 1px solid #ccc;
                border-radius: 8px;
            }

            .input-group button {
                padding: 10px 20px;
                background-color: #4CAF50;
                color: white;
                border: none;
                border-radius: 8px;
                cursor: pointer;
                transition: background 0.3s;
            }

                .input-group button:hover {
                    background-color: #45a049;
                }

        table {
            width: 100%;
            border-collapse: collapse;
            background: #fff;
        }

        th, td {
            padding: 12px;
            text-align: center;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #f0f0f0;
            color: #333;
        }

        td .btn {
            padding: 6px 12px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-size: 14px;
            margin: 0 2px;
            transition: 0.3s;
        }

        .edit-btn {
            background-color: #2196F3;
            color: white;
        }

            .edit-btn:hover {
                background-color: #1976D2;
            }

        .delete-btn {
            background-color: #f44336;
            color: white;
        }

            .delete-btn:hover {
                background-color: #d32f2f;
            }

        .email-btn {
            background-color: #ff9800;
            color: white;
        }

            .email-btn:hover {
                background-color: #e68900;
            }

        .back-link {
            display: inline-block;
            margin-top: 20px;
            text-decoration: none;
            background-color: #555;
            color: white;
            padding: 8px 16px;
            border-radius: 6px;
        }

            .back-link:hover {
                background-color: #333;
            }
    </style>
</head>
<body>

    <div class="container">
        <h2>User Management</h2>

        <div class="input-group">
            <input type="text" id="userNameInput" placeholder="Enter user name">
            <input type="email" id="userEmailInput" placeholder="Enter user email">
            <button onclick="addUser()">Add</button>
        </div>

        <table>
            <thead>
                <tr>
                    <th>Name</th>
                    <th>Email</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody id="userTable">
                <!-- Users will be listed here -->
            </tbody>
        </table>

        <a href="index.html" class="back-link">← Back to Home</a>
    </div>

    <script>
        let users = [];

        function renderUsers() {
            const table = document.getElementById("userTable");
            table.innerHTML = "";
            users.forEach((user, index) => {
                const row = document.createElement("tr");

                const nameCell = document.createElement("td");
                nameCell.innerText = user.name;
                row.appendChild(nameCell);

                const emailCell = document.createElement("td");
                emailCell.innerText = user.email;
                row.appendChild(emailCell);

                const actionCell = document.createElement("td");

                const emailBtn = document.createElement("button");
                emailBtn.innerText = "Email";
                emailBtn.className = "btn email-btn";
                emailBtn.onclick = () => window.location.href = `mailto:${user.email}`;

                const editBtn = document.createElement("button");
                editBtn.innerText = "Edit";
                editBtn.className = "btn edit-btn";
                editBtn.onclick = () => editUser(index);

                const deleteBtn = document.createElement("button");
                deleteBtn.innerText = "Delete";
                deleteBtn.className = "btn delete-btn";
                deleteBtn.onclick = () => deleteUser(index);

                actionCell.appendChild(emailBtn);
                actionCell.appendChild(editBtn);
                actionCell.appendChild(deleteBtn);
                row.appendChild(actionCell);

                table.appendChild(row);
            });
        }

        function addUser() {
            const nameInput = document.getElementById("userNameInput");
            const emailInput = document.getElementById("userEmailInput");
            const name = nameInput.value.trim();
            const email = emailInput.value.trim();

            if (name && email) {
                users.push({ name, email });
                nameInput.value = "";
                emailInput.value = "";
                renderUsers();
            }
        }

        function editUser(index) {
            const newName = prompt("Edit user name:", users[index].name);
            const newEmail = prompt("Edit user email:", users[index].email);
            if (newName && newEmail) {
                users[index] = { name: newName.trim(), email: newEmail.trim() };
                renderUsers();
            }
        }

        function deleteUser(index) {
            if (confirm("Are you sure you want to delete this user?")) {
                users.splice(index, 1);
                renderUsers();
            }
        }

        renderUsers();
    </script>

</body>
</html>
